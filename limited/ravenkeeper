**Ravenkeeper** | Townsfolk Power | Limited
__Basics__
Each night, the Ravenkeeper may assign one of its ravens to a player. The Ravenkeeper will learn if an ability is used on of the players with a raven.
__Details__
The Ravenkeeper starts out with 1 raven for every 5 players in the game (rounded down). Each night, the Ravenkeeper may assign one raven to another player. Assigning a raven is an *immediate effect*.
The first time an ability is used on a player with a raven, the raven heads back to the Ravenkeeper and lets the Ravenkeeper learn the type of ability that was used and which player it was used on. Ravens can usually only report on one ability, except when several abilities are used at the same time at the end of a phase (in this case the Ravenkeeper will learn all the ability types, but not duplicates). 
The Ravenkeeper is affected by *redirections*, however the Ravenkeeper will know a raven got redirected when it returns and reports on an ability.
If there are several Ravenkeepers, their ravens are separate.
During the day, the Ravenkeeper may recall a raven. Recalling is an immediate effect.
The Ravenkeeper cannot send several ravens to the same player, and attempting to do so results in failure.

__Simplified__
Each night, the Ravenkeeper may assign a raven to a player. When an ability is used on a player with a raven, the raven returns, informing the Ravenkeeper of the ability type.

__Formalized__
I currently do not have enough time to update this formalization so let this comment be a syntax error and problem for future me.
Starting:
  • Apply `Raven` to @Self
  • Set Counter to calc(floor($total/3))
Passive Start Night:
  @Self->Counter > `0`: `RavenAction` Choice Creation (Assign, Reassign)
  Otherwise: `RavenAction` Choice Creation (Reassign)
Choice `Assign` Chosen:
  • (@Selection has `Raven:@Self`):
    ‣ Apply `Raven` to @Selection (~Persistent)
    ‣ Decrement Counter
Choice `Reassign` Chosen:
  • (@SecondarySelection has `Raven:Self`) and not (@Selection has `Raven:Self`):
    ‣ Revoke `Raven:Self` from @SecondarySelection
    ‣ Apply `Raven` to @Selection (~Persistent)
Immediate Night:
  • `RavenAction` Choice Choose @Chosen
  • (@Self->Counter > `0`) and not (@Self has `Raven:Self`): Apply `Raven` to @Self
  • (@Self->Counter is `0`) and (@Self has `Raven:Self`): Revoke `Raven:Self` from @Self
On @(AttrSelf:Raven) Death:
  • Increment Counter
  • not (@Self has `Raven:Self`): Apply `Raven` to @Self

__Card__
Ravens are loyal pets. Should two of them encounter each other, the Ravenkeeper will surely know.
